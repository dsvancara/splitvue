{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Frame","props","url","src","title","frameBorder","View","state","value","handleChangeValue","e","setState","target","handleSetUrl","id","onUrlChange","handleRemove","onRemove","this","prevProps","type","onChange","onClick","React","Component","App","views","JSON","parse","localStorage","getItem","setViews","setItem","stringify","handleAddView","newViews","Math","random","toString","substring","handleRemoveView","filter","v","handleUrlChange","map","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAIMA,G,MAAQ,SAAAC,GAAU,IACdC,EAAQD,EAARC,IACR,OACE,8BACE,wBAAQC,IAAKD,EAAKE,MAAOF,EAAKG,YAAY,UAK1CC,E,4MACJC,MAAQ,CACNC,MAAO,I,EAgBTC,kBAAoB,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEH,MAAOE,EAAEE,OAAOJ,S,EACzDK,aAAe,WAAO,IAAD,EACS,EAAKZ,MAAzBa,EADW,EACXA,IAERC,EAHmB,EACPA,aAEAD,EADA,EAAKP,MAAMC,Q,EAGzBQ,aAAe,WAAO,IAAD,EACM,EAAKf,MAAtBa,EADW,EACXA,IACRG,EAFmB,EACPA,UACHH,I,kEApBTI,KAAKP,SAAS,CACZH,MAAOU,KAAKjB,MAAMC,Q,yCAIHiB,GAAY,IACrBjB,EAAQgB,KAAKjB,MAAbC,IACJiB,EAAUjB,MAAQA,GACpBgB,KAAKP,SAAS,CAAEH,MAAON,M,+BAejB,IACAM,EAAUU,KAAKX,MAAfC,MACAN,EAAQgB,KAAKjB,MAAbC,IACR,OACE,gCACE,gCACE,uBAAOkB,KAAK,OAAOZ,MAAOA,EAAOa,SAAUH,KAAKT,oBAChD,wBAAQa,QAASJ,KAAKL,aAAtB,iBACA,wBAAQS,QAASJ,KAAKF,aAAtB,uBAEF,cAAC,EAAD,CAAOd,IAAKA,W,GAvCDqB,IAAMC,WA8FVC,E,4MAhDblB,MAAQ,CACNmB,MAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,OAAS,I,EAG9DC,SAAW,SAAAL,GACT,EAAKf,SAAS,CAAEe,UAChBG,aAAaG,QAAQ,QAASL,KAAKM,UAAUP,K,EAG/CQ,cAAgB,WAAO,IACbR,EAAU,EAAKnB,MAAfmB,MACFS,EAAQ,sBACTT,GADS,CAEZ,CACEZ,GAAIsB,KAAKC,SACNC,SAAS,IACTC,UAAU,GACbrC,IAAK,MAGT,EAAK6B,SAASI,I,EAGhBK,iBAAmB,SAAA1B,GAAO,IAElBqB,EADY,EAAK5B,MAAfmB,MACee,QAAO,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,KAC5C,EAAKiB,SAASI,I,EAGhBQ,gBAAkB,SAAC7B,EAAIZ,GAAS,IAExBiC,EADY,EAAK5B,MAAfmB,MACekB,KAAI,SAAAF,GAAC,OAAKA,EAAE5B,KAAOA,EAAT,2BAAmB4B,GAAnB,IAAsBxC,QAAQwC,KAC/D,EAAKX,SAASI,I,uDAGN,IAAD,OACCT,EAAUR,KAAKX,MAAfmB,MACR,OACE,sBAAKmB,UAAU,MAAf,UACGnB,EAAMkB,KAAI,SAAAF,GAAC,OAAI,cAAC,EAAD,2BAAqBA,GAArB,IAAwB3B,YAAa,EAAK4B,gBAAiB1B,SAAU,EAAKuB,mBAA/DE,EAAE5B,OAC7B,8BACE,wBAAQQ,QAASJ,KAAKgB,cAAtB,0B,GA1CQX,IAAMC,WC9CTsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.baeeddb8.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nconst Frame = props => {\n  const { url } = props;\n  return (\n    <div>\n      <iframe src={url} title={url} frameBorder=\"0\" />\n    </div>\n  );\n};\n\nclass View extends React.Component {\n  state = {\n    value: ''\n  };\n\n  componentDidMount() {\n    this.setState({\n      value: this.props.url\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { url } = this.props;\n    if (prevProps.url !== url) {\n      this.setState({ value: url });\n    }\n  }\n\n  handleChangeValue = e => this.setState({ value: e.target.value });\n  handleSetUrl = () => {\n    const { id, onUrlChange } = this.props;\n    const url = this.state.value;\n    onUrlChange(id, url);\n  };\n  handleRemove = () => {\n    const { id, onRemove } = this.props;\n    onRemove(id);\n  };\n\n  render() {\n    const { value } = this.state;\n    const { url } = this.props;\n    return (\n      <div>\n        <div>\n          <input type=\"text\" value={value} onChange={this.handleChangeValue} />\n          <button onClick={this.handleSetUrl}>Set</button>\n          <button onClick={this.handleRemove}>Remove</button>\n        </div>\n        <Frame url={url} />\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    views: JSON.parse(localStorage.getItem('views') || '[]') || []\n  };\n\n  setViews = views => {\n    this.setState({ views });\n    localStorage.setItem('views', JSON.stringify(views));\n  };\n\n  handleAddView = () => {\n    const { views } = this.state;\n    const newViews = [\n      ...views,\n      {\n        id: Math.random()\n          .toString(36)\n          .substring(2),\n        url: ''\n      }\n    ];\n    this.setViews(newViews);\n  };\n\n  handleRemoveView = id => {\n    const { views } = this.state;\n    const newViews = views.filter(v => v.id !== id);\n    this.setViews(newViews);\n  };\n\n  handleUrlChange = (id, url) => {\n    const { views } = this.state;\n    const newViews = views.map(v => (v.id === id ? { ...v, url } : v));\n    this.setViews(newViews);\n  };\n\n  render() {\n    const { views } = this.state;\n    return (\n      <div className=\"App\">\n        {views.map(v => <View key={v.id} {...v} onUrlChange={this.handleUrlChange} onRemove={this.handleRemoveView} />)}\n        <div>\n          <button onClick={this.handleAddView}>Add</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}